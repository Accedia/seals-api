service: seals-api

provider:
  name: aws
  region: eu-central-1
  runtime: python3.6
  iamRoleStatements:
    - Effect: Allow
      Action: secretsmanager:GetSecretValue
      Resource: "*"

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: non-linux

package:
  exclude:
    - venv/**

functions:
  get:
    handler: lambdas/get.get
    events:
      - http:
          path: beaches/{point}
          method: get
          cors:
            origin: '*' # <-- Specify allowed origin
            headers: # <-- Specify allowed headers
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
  list:
    handler: lambdas/list.list_all
    events:
      - http:
          path: beaches
          method: get
          cors:
            origin: '*' # <-- Specify allowed origin
            headers: # <-- Specify allowed headers
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
  import_burgas:
    handler: file-export/burgas.lambda_handler
    events:
      - schedule: cron(0 16 ? * MON-FRI *)
  import_dobrich:
    handler: file-export/dobrich.lambda_handler
    events:
      - schedule: cron(0 16 ? * MON-FRI *)
  import_varna:
    handler: file-export/varna.lambda_handler
    timeout: 60
    events:
      - schedule: cron(0 16 ? * MON-FRI *)